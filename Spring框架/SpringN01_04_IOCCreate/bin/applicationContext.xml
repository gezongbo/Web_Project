<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd ">

	<!-- IOC创建对象的方式1：无参构造 -->
	<!-- 
	<bean id="person" class="com.lddx.bean.Person"></bean>
	-->
	<bean id="date" class="java.util.Date"></bean>
	<!--  底层实现 
	      Date d=new Date();
	      Map.put("date",d);
	      context.getBean("date");  等价于底层：Map.get("date")
	 -->
	<!--  
	<bean id="cal" class="java.util.Calendar"></bean>
	-->
	<!-- 底层：new Calendar()  已经出错误了
	         Map.put("cal",Calendar);
	             使用如上方式配置Calendar会报错误
	  -->
	  
	  
	
	<!-- IOC创建对象的方式2：配置静态工厂中的静态方法 
	     id="" 起一个可以被调用的id名字
	     class="" 配置的静态工厂
	     factory-method=""配置的静态工厂中的静态方法，只写方法名
	 -->
	<bean id="calendar" class="com.lddx.factory.CalendarStaticFactory" factory-method="getCanendar"></bean>
    <bean id="p1" class="com.lddx.factory.PersonStaticFactory" factory-method="getPerson"></bean>
    <bean id="p2" class="com.lddx.factory.PersonStaticFactory" factory-method="getPerson1"></bean>
    
    
    <!-- IOC创建对象的方式3：配置实例工厂的非静态方法 -->
    <bean id="cif" class="com.lddx.factory.CalendarInstanceFactory"></bean>
    <bean id="calendar3" factory-bean="cif" factory-method="getCalendar"></bean>
    <!--  底层实现： 
          33行执行完，CalendarInstanceFactory cif=new CalendarInstanceFactory()
                   Map.put("cif",cif);
          34行执行     Map.get("cif")  CalendarInstanceFactory cif;
                  cif.getCalendar();    Calendar对象
                  Map.put("calendar3",Calendar);
          context.getBean("calendar3")  等价于底层   Map.get("calendar3")
                          获取：Calendar对象
     -->
    <bean id="pif" class="com.lddx.factory.PersonInstanceFactory"></bean>
    <!--   底层：
           PersonInstanceFactory pif=new PersonInstanceFactory();
           Map.put("pif",pif);
     -->
    <bean id="person3" factory-bean="pif" factory-method="getPerson"></bean>
    <!--   底层：
           Map.get("pif")  获得pif,  PersonInstanceFactory 
           pif.getPerson()   该方法返回：Person对象
           Map.put("person3",Person对象);
     -->
    
    <!-- 
           IOC创建对象的方式4：Spring工厂的方式
     -->
	<bean id="calendar4" class="com.lddx.factory.CalendarSpringFactory"></bean>
	<bean id="person4" class="com.lddx.factory.PersonSpringFactory"></bean>


</beans>